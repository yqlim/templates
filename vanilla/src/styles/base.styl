fontFamily = -apple-system, BlinkMacSystemFont, Lato, 'Helvetica Neue', 'Segoe UI', sans-serif

colors = {
  main: #fff,
  black: #454545,
  grey: #e6e6e6,
  white: #fff,
  error: #d93025
}

colors.lightmain = lighten(colors.main, 25%)
colors.lightblack = lighten(colors.black, 25%)
colors.lightgrey = lighten(colors.grey, 25%)
colors.darkmain = darken(colors.main, 25%)
colors.darkblack = darken(colors.black, 25%)
colors.darkgrey = darken(colors.grey, 25%)


contrastRatio(c1, c2)
  LB = luminosity(c1)
  LF = luminosity(c2)
  light = max(LB, LF)
  dark = min(LB, LF)
  ratio = (light + 0.05)/(dark + 0.05)
  return ratio

AA(fg, bg)
  return contrastRatio(bg, fg) >= 4.5

AAA(fg, bg)
  return contrastRatio(bg, fg) >= 7

props(keys...)
  return unquote(join(', ', keys))

vals(v...)
  return unquote(join(' ', v))


user-select(val)
  user-select: val
  -webkit-touch-callout: val if val == 'none'

flex(horizontal = stretch, vertical = center, direction = row, wrapping = nowrap)
  display: flex
  align-content: center
  if match('^(flex-start|flex-end|stretch|center|baseline|initial|inherit)(?:\s+\!important)?$', horizontal)
    align-items: horizontal
  else
    error('Flex: Invalid "horizontal" value.')
  if match('^(flex-start|flex-end|center|space-between|space-around|space-evenly|initial|inherit)(?:\s+\!important)?$', vertical)
    justify-content: space-around if vertical is 'space-evenly'  // Fallback value
    justify-content: vertical
  else
    error('Flex: Invalid "vertical" value.')
  if match('^(row(-reverse)?|column(-reverse)?|initial|inherit)(?:\s+\!important)?$', direction)
    flex-direction: direction
  else
    error('Flex: Invalid "direction" value.')
  if match('^(nowrap|wrap(-reverse)?|initial|inherit)(?:\s+\!important)?$', wrapping)
    flex-wrap: wrapping
  else
    error('Flex: Invalid "wrapping" value.')

transition(props = all, duration = 0.25s, timing = ease, delay = 0s)
  transition-property: props
  transition-duration: duration
  transition-timing-function: timing
  transition-delay: delay

overflow(x, y = x)
  overflow-x: x
  overflow-y: y

background(str, size = contain, position = center)
  if typeof(str) is 'rgba'
    background-color: str
  else
    background-image: url(str) if typeof(str) is 'string'
    background-size: size
    background-repeat: no-repeat
    background-position: position position

aspect-ratio(w, h)
  &::after
    content: ''
    width: 100%
    display: block
    padding-top: "calc(100% * (%s/%s))" % (h w)

gradient(direction = left, colors...)
  fallback = colors[1][0]
  colors = join(',', colors)
  colors = unquote(colors)
  background-color: fallback
  background-image: linear-gradient(direction, colors)


*
  box-sizing: border-box;
  -webkit-overflow-scrolling: touch;

html
body
  width: 100%
  height: 100%
  font-size: 16px
  font-family: fontFamily
  color: colors.black
  padding: 0
  margin: 0
